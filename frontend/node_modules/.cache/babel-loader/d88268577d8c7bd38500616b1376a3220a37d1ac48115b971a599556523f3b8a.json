{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\coding\\\\bonus-class-booker\\\\frontend\\\\src\\\\components\\\\AvailableSlots.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAvailableSlots } from '../services/apiService';\nimport Notification from './Notification';\nimport BookingForm from './BookingForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableSlots = ({\n  modality\n}) => {\n  _s();\n  const [slots, setSlots] = useState([]);\n  const [notification, setNotification] = useState(null);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(null);\n  useEffect(() => {\n    const fetchSlots = async () => {\n      try {\n        console.log('Buscando horários para modalidade:', modality);\n        const response = await getAvailableSlots(modality);\n        console.log('Horários recebidos:', response.data);\n        setSlots(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar horários:', error.message);\n        setNotification({\n          message: 'Erro ao carregar horários',\n          type: 'error'\n        });\n      }\n    };\n    if (modality) {\n      console.log('Modalidade selecionada, iniciando busca...');\n      fetchSlots();\n    }\n  }, [modality]);\n  const openBookingForm = (slot, rowIndex) => {\n    console.log('Abrindo formulário para slot:', slot, 'com rowIndex:', rowIndex); // Adicione este log\n    setSelectedSlot(slot);\n    setSelectedRowIndex(rowIndex);\n  };\n  const handleBookingSuccess = () => {\n    setSelectedSlot(null);\n    setSelectedRowIndex(null);\n    // Recarregar horários\n    const fetchSlots = async () => {\n      try {\n        const response = await getAvailableSlots(modality);\n        setSlots(response.data);\n      } catch (error) {\n        setNotification({\n          message: 'Erro ao recarregar horários',\n          type: 'error'\n        });\n      }\n    };\n    fetchSlots();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hor\\xE1rios Dispon\\xEDveis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      message: notification.message,\n      type: notification.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }, this), slots.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nenhum hor\\xE1rio dispon\\xEDvel para a modalidade selecionada.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: slots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [slot[1], \" - \", slot[0], \" (\", slot[2] || 'Online ou Presencial', \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openBookingForm(slot, index),\n          children: \"Agendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), selectedSlot && /*#__PURE__*/_jsxDEV(BookingForm, {\n      slot: selectedSlot,\n      rowIndex: selectedRowIndex,\n      onBookingSuccess: handleBookingSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableSlots, \"LFeRA09yLF0bZR+kdz5hqpqeh5g=\");\n_c = AvailableSlots;\nexport default AvailableSlots;\nvar _c;\n$RefreshReg$(_c, \"AvailableSlots\");","map":{"version":3,"names":["React","useState","useEffect","getAvailableSlots","Notification","BookingForm","jsxDEV","_jsxDEV","AvailableSlots","modality","_s","slots","setSlots","notification","setNotification","selectedSlot","setSelectedSlot","selectedRowIndex","setSelectedRowIndex","fetchSlots","console","log","response","data","error","message","type","openBookingForm","slot","rowIndex","handleBookingSuccess","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onClick","onBookingSuccess","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/coding/bonus-class-booker/frontend/src/components/AvailableSlots.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAvailableSlots } from '../services/apiService';\r\nimport Notification from './Notification';\r\nimport BookingForm from './BookingForm';\r\n\r\nconst AvailableSlots = ({ modality }) => {\r\n  const [slots, setSlots] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [selectedRowIndex, setSelectedRowIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSlots = async () => {\r\n      try {\r\n        console.log('Buscando horários para modalidade:', modality);\r\n        const response = await getAvailableSlots(modality);\r\n        console.log('Horários recebidos:', response.data);\r\n        setSlots(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar horários:', error.message);\r\n        setNotification({ message: 'Erro ao carregar horários', type: 'error' });\r\n      }\r\n    };\r\n    if (modality) {\r\n      console.log('Modalidade selecionada, iniciando busca...');\r\n      fetchSlots();\r\n    }\r\n  }, [modality]);\r\n\r\n  const openBookingForm = (slot, rowIndex) => {\r\n    console.log('Abrindo formulário para slot:', slot, 'com rowIndex:', rowIndex); // Adicione este log\r\n    setSelectedSlot(slot);\r\n    setSelectedRowIndex(rowIndex);\r\n  };\r\n\r\n  const handleBookingSuccess = () => {\r\n    setSelectedSlot(null);\r\n    setSelectedRowIndex(null);\r\n    // Recarregar horários\r\n    const fetchSlots = async () => {\r\n      try {\r\n        const response = await getAvailableSlots(modality);\r\n        setSlots(response.data);\r\n      } catch (error) {\r\n        setNotification({ message: 'Erro ao recarregar horários', type: 'error' });\r\n      }\r\n    };\r\n    fetchSlots();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Horários Disponíveis</h2>\r\n      {notification && <Notification message={notification.message} type={notification.type} />}\r\n      {slots.length === 0 ? (\r\n        <p>Nenhum horário disponível para a modalidade selecionada.</p>\r\n      ) : (\r\n        <ul>\r\n          {slots.map((slot, index) => (\r\n            <li key={index}>\r\n              {slot[1]} - {slot[0]} ({slot[2] || 'Online ou Presencial'})\r\n              <button onClick={() => openBookingForm(slot, index)}>Agendar</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {selectedSlot && (\r\n        <BookingForm\r\n          slot={selectedSlot}\r\n          rowIndex={selectedRowIndex}\r\n          onBookingSuccess={handleBookingSuccess}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvailableSlots;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}